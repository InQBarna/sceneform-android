plugins {
    id 'com.android.library'
    id 'kotlin-android'
//    id 'com.vanniktech.maven.publish'
}

android {
    compileSdk 33
    namespace "com.google.ar.sceneform"

    defaultConfig {
        // Sceneform requires minSdk >= 24.
        minSdk 24
        targetSdk 33

        consumerProguardFiles 'lib-proguard-rules.pro'

        buildConfigField 'String', 'VERSION_NAME', "\"${project.properties['VERSION_NAME']}\""
    }
    buildFeatures {
        buildConfig true
    }
    compileOptions {
        // Sceneform libraries use language constructs from Java 8.
        // Add these compile options if targeting minSdk < 26.
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    androidResources {
        noCompress 'filamat', 'ktx'
    }
}

dependencies {
    //TODO: Remove it
    implementation files("libs/libsceneform_runtime_schemas.jar")

    // Kotlin
    implementation(platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.7.1"))
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8")

    // Filament
    api "com.google.android.filament:filament-android:1.21.1"
    api "com.google.android.filament:gltfio-android:1.21.1"
    api "com.google.android.filament:filament-utils-android:1.21.1"
    api "org.slf4j:slf4j-api:1.7.25"

    // ARCore
    api "com.google.ar:core:1.37.0"

    // AndroidX
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"

    // Fuel
    implementation "com.github.kittinunf.fuel:fuel:2.3.1"
    implementation "com.github.kittinunf.fuel:fuel-android:2.3.1"
    implementation "com.github.kittinunf.fuel:fuel-coroutines:2.3.1"
}

//mavenPublish {
//    releaseSigningEnabled = project.hasProperty('signing.keyId') && project.hasProperty('signing.password')
//}
